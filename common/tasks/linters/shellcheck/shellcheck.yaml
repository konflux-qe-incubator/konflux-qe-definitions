---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: shellcheck
spec:
  description: |
    This task performs a ShellCheck analysis on shell scripts in a given Git repository. 
    It clones the specified repository at the given revision, then searches for all shell 
    scripts and runs ShellCheck to identify potential issues and warnings.
  params:
    - name: git-url
      description: The Git URL from which the test pipeline is originating. This can be from a fork or the original repository.
      type: string
    - name: git-revision
      description: The Git revision (commit SHA) from which the test pipeline is originating.
      type: string
    - name: exclude-dirs
      description: A list of files or directories to exclude from the ShellCheck analysis.
      type: array
      default: []
  steps:
    - name: clone-refs
      image: quay.io/konflux-qe-incubator/konflux-qe-tools:latest
      workingDir: /workspace
      script: |
        #!/bin/sh
        set -e
        
        git clone "$(params.git-url)" .
        git checkout "$(params.git-revision)"
    - name: shellcheck
      image: quay.io/konflux-qe-incubator/konflux-qe-tools:latest
      workingDir: /workspace
      args: ["$(params.exclude-dirs[*])"]
      script: |
        #!/bin/sh
        set -e
        set -x
        # using local variable excluded_dirs to store the directories to exclude
        
        excluded_dirs=( "$@" )
        find_exclude=""

        # Build the exclude pattern for find command
        for dir in "${excluded_dirs[@]}"; do
            find_exclude+=" -path ./$dir -prune -o"
        done

        # Find all .sh files excluding specified directories
        sh_files=$(eval "find . ${find_exclude} -name '*.sh' -print")

        # Check if any .sh files were found
        if [ -n "$sh_files" ]; then
            # Run shellcheck on the found .sh files
            echo "$sh_files" | xargs shellcheck
        else
            echo "[INFO] No .sh files found to check."
        fi
